<div class="login-container">
    <div class="login-box">
        <form id="loginForm">
            <h2 style="color: #064050">Đăng Nhập</h2>
            <p id="errorMessage" style="color: rgb(113, 2, 2); display: none;">Tên tài khoản hoặc mật khẩu không đúng.</p>
            <div class="form-group">
                <label for="username">Tài khoản</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Mật khẩu</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <a href="/forgot-password">Quên mật khẩu?</a>
            </div>
            <button type="submit" style="margin-top: 180px;">Đăng nhập</button>
        </form>
        
    </div>
</div>

<script>
    document.getElementById('loginForm').addEventListener('submit', function(event) {
        event.preventDefault();

        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        fetch('/users/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ username: username, password: password })
        })
        .then(response => response.json())
        .then(data => {
            if (data.token) {
                // Store the token in localStorage
                localStorage.setItem('token', data.token);
                
             
                // Fetch initial user data
                return fetch('/users/login', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${data.token}`
                    }
                });
            } else {
                throw new Error(data.error || 'Tên tài khoản hoặc mật khẩu không đúng.');
            }
        })
        .then(response => response.json())
        .then(userData => { 
            console.log('User Data hehe:', userData);
            // Redirect to the appropriate page based on the user's role
            switch(userData.role) {
                case 'Teacher':
                    window.location.href = '/mylibraryteacher';
                    break;
                case 'Student':
                    window.location.href = '/mylibrarystudent';
                    break;
                case 'Admin':
                    window.location.href = '/mylibraryadmin';
                    break;
                case 'Group Leader':
                    window.location.href = '/mylibraryleader';
                    break;
                default:
                    console.error('Unknown role:', userData.role);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            // Show error message
            document.getElementById('errorMessage').style.display = 'block';
            document.getElementById('errorMessage').textContent = error.message;
        });
    });
</script>